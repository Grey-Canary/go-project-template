{
    "swagger": "2.0",
    "info": {
        "description": "Primary backend services the Project.",
        "title": "Project",
        "contact": {
            "name": "API Support",
            "url": "https://greycanary.io",
            "email": "dev@greycanary.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "host": "localhost:5000",
    "basePath": "/v1",
    "paths": {
        "/users": {
            "get": {
                "description": "Accepts pagination based query parameters and returns a paginated response.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get List of Users",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "orderDir",
                        "description": "filter name",
                        "name": "orderDir",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "description": "Accepts a JSON model and on conflict of a present UUID will instead update the user fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create or Update User",
                "parameters": [
                    {
                        "description": "User",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{userid}": {
            "get": {
                "description": "Accepts an ID and returns a JSON model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Accepts an ID and processes the delete. Returns a 200 header if no errors occured during the delete.",
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.User": {
            "description": "User base model",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johnwick@mail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Wick"
                },
                "uuid": {
                    "type": "string",
                    "example": "3fe82b1f-ab3d-40a1-8bd8-bccd4dd166f8"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}